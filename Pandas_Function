{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "f87b6992",
   "metadata": {
    "papermill": {
     "duration": 0.005871,
     "end_time": "2025-01-20T19:27:10.525648",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.519777",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**This notebook is an exercise in the [Pandas](https://www.kaggle.com/learn/pandas) course.  You can reference the tutorial at [this link](https://www.kaggle.com/residentmario/summary-functions-and-maps).**\n",
    "\n",
    "---\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f743307",
   "metadata": {
    "papermill": {
     "duration": 0.004703,
     "end_time": "2025-01-20T19:27:10.535684",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.530981",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Introduction\n",
    "\n",
    "Now you are ready to get a deeper understanding of your data.\n",
    "\n",
    "Run the following cell to load your data and some utility functions (including code to check your answers)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d1cc60b9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-09T22:50:36.199606Z",
     "iopub.status.busy": "2025-01-09T22:50:36.199157Z",
     "iopub.status.idle": "2025-01-09T22:50:42.435210Z",
     "shell.execute_reply": "2025-01-09T22:50:42.434298Z",
     "shell.execute_reply.started": "2025-01-09T22:50:36.199565Z"
    },
    "papermill": {
     "duration": 0.005168,
     "end_time": "2025-01-20T19:27:10.545762",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.540594",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "import pandas as pd\n",
    "pd.set_option(\"display.max_rows\", 5)\n",
    "reviews = pd.read_csv(\"../input/wine-reviews/winemag-data-130k-v2.csv\", index_col=0)\n",
    "\n",
    "from learntools.core import binder; binder.bind(globals())\n",
    "from learntools.pandas.summary_functions_and_maps import *\n",
    "print(\"Setup complete.\")\n",
    "\n",
    "reviews.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "de839b9d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-09T22:50:47.655105Z",
     "iopub.status.busy": "2025-01-09T22:50:47.654681Z",
     "iopub.status.idle": "2025-01-09T22:50:47.661869Z",
     "shell.execute_reply": "2025-01-09T22:50:47.660738Z",
     "shell.execute_reply.started": "2025-01-09T22:50:47.655070Z"
    },
    "papermill": {
     "duration": 0.004629,
     "end_time": "2025-01-20T19:27:10.555624",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.550995",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "reviews.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f7a68135",
   "metadata": {
    "papermill": {
     "duration": 0.004699,
     "end_time": "2025-01-20T19:27:10.565300",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.560601",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Exercises"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "20ab2e5a",
   "metadata": {
    "papermill": {
     "duration": 0.004681,
     "end_time": "2025-01-20T19:27:10.574953",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.570272",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 1.\n",
    "\n",
    "What is the median of the `points` column in the `reviews` DataFrame?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5cae65fe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-09T22:50:51.170390Z",
     "iopub.status.busy": "2025-01-09T22:50:51.170030Z",
     "iopub.status.idle": "2025-01-09T22:50:51.180647Z",
     "shell.execute_reply": "2025-01-09T22:50:51.179547Z",
     "shell.execute_reply.started": "2025-01-09T22:50:51.170362Z"
    },
    "papermill": {
     "duration": 0.004609,
     "end_time": "2025-01-20T19:27:10.584515",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.579906",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "median_points = reviews.points.median()\n",
    "\n",
    "# Check your answer\n",
    "q1.check()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ad8702a5",
   "metadata": {
    "papermill": {
     "duration": 0.004682,
     "end_time": "2025-01-20T19:27:10.594170",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.589488",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#q1.hint()\n",
    "#q1.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d839d226",
   "metadata": {
    "papermill": {
     "duration": 0.004632,
     "end_time": "2025-01-20T19:27:10.603739",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.599107",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 2. \n",
    "What countries are represented in the dataset? (Your answer should not include any duplicates.)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5444d8e4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-09T22:50:56.613995Z",
     "iopub.status.busy": "2025-01-09T22:50:56.613606Z",
     "iopub.status.idle": "2025-01-09T22:50:56.626011Z",
     "shell.execute_reply": "2025-01-09T22:50:56.624951Z",
     "shell.execute_reply.started": "2025-01-09T22:50:56.613955Z"
    },
    "papermill": {
     "duration": 0.004646,
     "end_time": "2025-01-20T19:27:10.613479",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.608833",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "countries = reviews.country.unique()\n",
    "\n",
    "# Check your answer\n",
    "q2.check()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b4e88ff8",
   "metadata": {
    "papermill": {
     "duration": 0.004645,
     "end_time": "2025-01-20T19:27:10.623087",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.618442",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#q2.hint()\n",
    "#q2.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c16b516d",
   "metadata": {
    "papermill": {
     "duration": 0.004666,
     "end_time": "2025-01-20T19:27:10.632893",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.628227",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 3.\n",
    "How often does each country appear in the dataset? Create a Series `reviews_per_country` mapping countries to the count of reviews of wines from that country."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "94d9162e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-09T22:51:05.638083Z",
     "iopub.status.busy": "2025-01-09T22:51:05.637673Z",
     "iopub.status.idle": "2025-01-09T22:51:05.655584Z",
     "shell.execute_reply": "2025-01-09T22:51:05.654551Z",
     "shell.execute_reply.started": "2025-01-09T22:51:05.638052Z"
    },
    "papermill": {
     "duration": 0.004617,
     "end_time": "2025-01-20T19:27:10.642529",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.637912",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "reviews_per_country = reviews.country.value_counts()\n",
    "\n",
    "# Check your answer\n",
    "q3.check()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae0ba901",
   "metadata": {
    "papermill": {
     "duration": 0.005505,
     "end_time": "2025-01-20T19:27:10.653072",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.647567",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#q3.hint()\n",
    "#q3.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e9754596",
   "metadata": {
    "papermill": {
     "duration": 0.005348,
     "end_time": "2025-01-20T19:27:10.663991",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.658643",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 4.\n",
    "Create variable `centered_price` containing a version of the `price` column with the mean price subtracted.\n",
    "\n",
    "(Note: this 'centering' transformation is a common preprocessing step before applying various machine learning algorithms.) "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "35b73d30",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-09T22:51:12.630925Z",
     "iopub.status.busy": "2025-01-09T22:51:12.630563Z",
     "iopub.status.idle": "2025-01-09T22:51:12.640027Z",
     "shell.execute_reply": "2025-01-09T22:51:12.639091Z",
     "shell.execute_reply.started": "2025-01-09T22:51:12.630871Z"
    },
    "papermill": {
     "duration": 0.00476,
     "end_time": "2025-01-20T19:27:10.674083",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.669323",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "mean1 = reviews.price.mean()\n",
    "centered_price = reviews.price - mean1\n",
    "\n",
    "# Check your answer\n",
    "q4.check()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37061905",
   "metadata": {
    "papermill": {
     "duration": 0.004684,
     "end_time": "2025-01-20T19:27:10.683705",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.679021",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#q4.hint()\n",
    "#q4.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "80c485c4",
   "metadata": {
    "papermill": {
     "duration": 0.004749,
     "end_time": "2025-01-20T19:27:10.693513",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.688764",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 5.\n",
    "I'm an economical wine buyer. Which wine is the \"best bargain\"? Create a variable `bargain_wine` with the title of the wine with the highest points-to-price ratio in the dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "889d9d03",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-01-09T22:55:22.460406Z",
     "iopub.status.busy": "2025-01-09T22:55:22.460047Z",
     "iopub.status.idle": "2025-01-09T22:55:22.472505Z",
     "shell.execute_reply": "2025-01-09T22:55:22.471650Z",
     "shell.execute_reply.started": "2025-01-09T22:55:22.460379Z"
    },
    "papermill": {
     "duration": 0.004703,
     "end_time": "2025-01-20T19:27:10.703302",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.698599",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "reviews['ratio'] = (reviews['points'] / reviews['price'] )\n",
    "bargain_wine_series = reviews.title[reviews['ratio'] == reviews['ratio'].max()]\n",
    "bargain_wine = bargain_wine_series.iloc[0]\n",
    "print(bargain_wine_series )\n",
    "# Check your answer\n",
    "q5.check()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "77fc1a77",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-23T13:19:56.983153Z",
     "iopub.status.busy": "2023-06-23T13:19:56.982749Z",
     "iopub.status.idle": "2023-06-23T13:19:56.989507Z",
     "shell.execute_reply": "2023-06-23T13:19:56.987474Z",
     "shell.execute_reply.started": "2023-06-23T13:19:56.983119Z"
    },
    "papermill": {
     "duration": 0.005218,
     "end_time": "2025-01-20T19:27:10.713759",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.708541",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#q5.hint()\n",
    "#q5.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0ce48dd6",
   "metadata": {
    "papermill": {
     "duration": 0.004689,
     "end_time": "2025-01-20T19:27:10.723668",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.718979",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 6.\n",
    "There are only so many words you can use when describing a bottle of wine. Is a wine more likely to be \"tropical\" or \"fruity\"? Create a Series `descriptor_counts` counting how many times each of these two words appears in the `description` column in the dataset. (For simplicity, let's ignore the capitalized versions of these words.)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3bd15363",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-23T15:28:26.694907Z",
     "iopub.status.busy": "2023-06-23T15:28:26.694438Z",
     "iopub.status.idle": "2023-06-23T15:28:26.896537Z",
     "shell.execute_reply": "2023-06-23T15:28:26.895528Z",
     "shell.execute_reply.started": "2023-06-23T15:28:26.694874Z"
    },
    "papermill": {
     "duration": 0.004819,
     "end_time": "2025-01-20T19:27:10.733610",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.728791",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "s_tropical = len(reviews[reviews.description.str.contains('tropical')].description)\n",
    "s_fruity = len(reviews[reviews.description.str.contains('fruity')].description)\n",
    "descriptor_counts = pd.Series({'tropical': s_tropical,'fruity': s_fruity})\n",
    "#reviews.description.str.count('tropical|fruity')\n",
    "# Check your answer\n",
    "q6.check()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "83f0c5ba",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-23T14:01:23.498486Z",
     "iopub.status.busy": "2023-06-23T14:01:23.498129Z",
     "iopub.status.idle": "2023-06-23T14:01:23.510318Z",
     "shell.execute_reply": "2023-06-23T14:01:23.509401Z",
     "shell.execute_reply.started": "2023-06-23T14:01:23.498460Z"
    },
    "papermill": {
     "duration": 0.004764,
     "end_time": "2025-01-20T19:27:10.744125",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.739361",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "q6.hint()\n",
    "q6.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "81769f8b",
   "metadata": {
    "papermill": {
     "duration": 0.004728,
     "end_time": "2025-01-20T19:27:10.753905",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.749177",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 7.\n",
    "We'd like to host these wine reviews on our website, but a rating system ranging from 80 to 100 points is too hard to understand - we'd like to translate them into simple star ratings. A score of 95 or higher counts as 3 stars, a score of at least 85 but less than 95 is 2 stars. Any other score is 1 star.\n",
    "\n",
    "Also, the Canadian Vintners Association bought a lot of ads on the site, so any wines from Canada should automatically get 3 stars, regardless of points.\n",
    "\n",
    "Create a series `star_ratings` with the number of stars corresponding to each review in the dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "367e7674",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-23T17:15:24.753470Z",
     "iopub.status.busy": "2023-06-23T17:15:24.753121Z",
     "iopub.status.idle": "2023-06-23T17:15:24.816884Z",
     "shell.execute_reply": "2023-06-23T17:15:24.816055Z",
     "shell.execute_reply.started": "2023-06-23T17:15:24.753441Z"
    },
    "papermill": {
     "duration": 0.004638,
     "end_time": "2025-01-20T19:27:10.763525",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.758887",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "reviews['star_ratings_temp'] = reviews['points'].apply(lambda x : 3 if x >= 95 else 2 if x >=85 else 1)\n",
    "reviews.loc[(reviews['country'] == 'Canada'),'star_ratings_temp'] = 3\n",
    "star_ratings = reviews['star_ratings_temp']\n",
    "# Check your answer\n",
    "q7.check()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3ba902f5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-06-23T17:15:31.462326Z",
     "iopub.status.busy": "2023-06-23T17:15:31.461983Z",
     "iopub.status.idle": "2023-06-23T17:15:31.470191Z",
     "shell.execute_reply": "2023-06-23T17:15:31.469095Z",
     "shell.execute_reply.started": "2023-06-23T17:15:31.462301Z"
    },
    "papermill": {
     "duration": 0.00507,
     "end_time": "2025-01-20T19:27:10.773717",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.768647",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#q7.hint()\n",
    "q7.solution()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a2324244",
   "metadata": {
    "papermill": {
     "duration": 0.004684,
     "end_time": "2025-01-20T19:27:10.783459",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.778775",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Keep going\n",
    "Continue to **[grouping and sorting](https://www.kaggle.com/residentmario/grouping-and-sorting)**."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "09a33ab7",
   "metadata": {
    "papermill": {
     "duration": 0.004772,
     "end_time": "2025-01-20T19:27:10.793675",
     "exception": false,
     "start_time": "2025-01-20T19:27:10.788903",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "---\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "*Have questions or comments? Visit the [course discussion forum](https://www.kaggle.com/learn/pandas/discussion) to chat with other learners.*"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 655,
     "sourceId": 1252,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 2321,
     "sourceId": 3919,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 2894,
     "sourceId": 4877,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 3491,
     "sourceId": 5624,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 1442,
     "sourceId": 8172,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 9366,
     "sourceId": 13206,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 179555,
     "sourceId": 403916,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 4549,
     "sourceId": 466349,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 2478,
     "sourceId": 1151655,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 10128,
     "sourceId": 5438389,
     "sourceType": "datasetVersion"
    }
   ],
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 3.670413,
   "end_time": "2025-01-20T19:27:11.318581",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-01-20T19:27:07.648168",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
