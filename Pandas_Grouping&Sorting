{"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":1252,"sourceType":"datasetVersion","datasetId":655},{"sourceId":3919,"sourceType":"datasetVersion","datasetId":2321},{"sourceId":4877,"sourceType":"datasetVersion","datasetId":2894},{"sourceId":5624,"sourceType":"datasetVersion","datasetId":3491},{"sourceId":8172,"sourceType":"datasetVersion","datasetId":1442},{"sourceId":13206,"sourceType":"datasetVersion","datasetId":9366},{"sourceId":403916,"sourceType":"datasetVersion","datasetId":179555},{"sourceId":466349,"sourceType":"datasetVersion","datasetId":4549},{"sourceId":1151655,"sourceType":"datasetVersion","datasetId":2478},{"sourceId":5438389,"sourceType":"datasetVersion","datasetId":10128}],"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"**This notebook is an exercise in the [Pandas](https://www.kaggle.com/learn/pandas) course.  You can reference the tutorial at [this link](https://www.kaggle.com/residentmario/grouping-and-sorting).**\n\n---\n","metadata":{}},{"cell_type":"markdown","source":"# Introduction\n\nIn these exercises we'll apply groupwise analysis to our dataset.\n\nRun the code cell below to load the data before running the exercises.","metadata":{}},{"cell_type":"code","source":"import pandas as pd\n\nreviews = pd.read_csv(\"../input/wine-reviews/winemag-data-130k-v2.csv\", index_col=0)\npd.set_option(\"display.max_rows\", 2)\n\nfrom learntools.core import binder; binder.bind(globals())\nfrom learntools.pandas.grouping_and_sorting import *\nprint(\"Setup complete.\")\nreviews","metadata":{"execution":{"iopub.status.busy":"2025-01-09T22:40:17.320176Z","iopub.execute_input":"2025-01-09T22:40:17.320658Z","iopub.status.idle":"2025-01-09T22:40:21.020096Z","shell.execute_reply.started":"2025-01-09T22:40:17.320605Z","shell.execute_reply":"2025-01-09T22:40:21.018945Z"},"trusted":true},"outputs":[{"name":"stdout","text":"Setup complete.\n","output_type":"stream"},{"name":"stderr","text":"/usr/local/lib/python3.10/dist-packages/learntools/pandas/grouping_and_sorting.py:29: FutureWarning: The provided callable <built-in function min> is currently using SeriesGroupBy.min. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"min\" instead.\n  _expected = reviews.groupby('variety').price.agg([min, max])\n/usr/local/lib/python3.10/dist-packages/learntools/pandas/grouping_and_sorting.py:29: FutureWarning: The provided callable <built-in function max> is currently using SeriesGroupBy.max. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"max\" instead.\n  _expected = reviews.groupby('variety').price.agg([min, max])\n/usr/local/lib/python3.10/dist-packages/learntools/pandas/grouping_and_sorting.py:35: FutureWarning: The provided callable <built-in function min> is currently using SeriesGroupBy.min. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"min\" instead.\n  _expected = reviews.groupby('variety').price.agg([min, max]).sort_values(by=['min', 'max'], ascending=False)\n/usr/local/lib/python3.10/dist-packages/learntools/pandas/grouping_and_sorting.py:35: FutureWarning: The provided callable <built-in function max> is currently using SeriesGroupBy.max. In a future version of pandas, the provided callable will be used directly. To keep current behavior pass the string \"max\" instead.\n  _expected = reviews.groupby('variety').price.agg([min, max]).sort_values(by=['min', 'max'], ascending=False)\n","output_type":"stream"},{"execution_count":1,"output_type":"execute_result","data":{"text/plain":"       country                                        description  \\\n0        Italy  Aromas include tropical fruit, broom, brimston...   \n...        ...                                                ...   \n129970  France  Big, rich and off-dry, this is powered by inte...   \n\n                          designation  points  price           province  \\\n0                        Vulkà Bianco      87    NaN  Sicily & Sardinia   \n...                               ...     ...    ...                ...   \n129970  Lieu-dit Harth Cuvée Caroline      90   21.0             Alsace   \n\n       region_1 region_2    taster_name taster_twitter_handle  \\\n0          Etna      NaN  Kerin O’Keefe          @kerinokeefe   \n...         ...      ...            ...                   ...   \n129970   Alsace      NaN     Roger Voss            @vossroger   \n\n                                                    title         variety  \\\n0                       Nicosia 2013 Vulkà Bianco  (Etna)     White Blend   \n...                                                   ...             ...   \n129970  Domaine Schoffit 2012 Lieu-dit Harth Cuvée Car...  Gewürztraminer   \n\n                  winery  \n0                Nicosia  \n...                  ...  \n129970  Domaine Schoffit  \n\n[129971 rows x 13 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n      <th>description</th>\n      <th>designation</th>\n      <th>points</th>\n      <th>price</th>\n      <th>province</th>\n      <th>region_1</th>\n      <th>region_2</th>\n      <th>taster_name</th>\n      <th>taster_twitter_handle</th>\n      <th>title</th>\n      <th>variety</th>\n      <th>winery</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Italy</td>\n      <td>Aromas include tropical fruit, broom, brimston...</td>\n      <td>Vulkà Bianco</td>\n      <td>87</td>\n      <td>NaN</td>\n      <td>Sicily &amp; Sardinia</td>\n      <td>Etna</td>\n      <td>NaN</td>\n      <td>Kerin O’Keefe</td>\n      <td>@kerinokeefe</td>\n      <td>Nicosia 2013 Vulkà Bianco  (Etna)</td>\n      <td>White Blend</td>\n      <td>Nicosia</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>129970</th>\n      <td>France</td>\n      <td>Big, rich and off-dry, this is powered by inte...</td>\n      <td>Lieu-dit Harth Cuvée Caroline</td>\n      <td>90</td>\n      <td>21.0</td>\n      <td>Alsace</td>\n      <td>Alsace</td>\n      <td>NaN</td>\n      <td>Roger Voss</td>\n      <td>@vossroger</td>\n      <td>Domaine Schoffit 2012 Lieu-dit Harth Cuvée Car...</td>\n      <td>Gewürztraminer</td>\n      <td>Domaine Schoffit</td>\n    </tr>\n  </tbody>\n</table>\n<p>129971 rows × 13 columns</p>\n</div>"},"metadata":{}}],"execution_count":1},{"cell_type":"markdown","source":"# Exercises","metadata":{}},{"cell_type":"markdown","source":"## 1.\nWho are the most common wine reviewers in the dataset? Create a `Series` whose index is the `taster_twitter_handle` category from the dataset, and whose values count how many reviews each person wrote.","metadata":{}},{"cell_type":"code","source":"# Your code here\nreviews_written = reviews.groupby('taster_twitter_handle').taster_name.count()\n\n# Check your answer\nq1.check()","metadata":{"execution":{"iopub.status.busy":"2025-01-09T22:40:50.794090Z","iopub.execute_input":"2025-01-09T22:40:50.794458Z","iopub.status.idle":"2025-01-09T22:40:50.827039Z","shell.execute_reply.started":"2025-01-09T22:40:50.794430Z","shell.execute_reply":"2025-01-09T22:40:50.825888Z"},"trusted":true},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.16666666666666666, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"1_ReviewsWritten\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct: \n\n\n```python\nreviews_written = reviews.groupby('taster_twitter_handle').size()\n```\nor\n```python\nreviews_written = reviews.groupby('taster_twitter_handle').taster_twitter_handle.count()\n```","text/markdown":"<span style=\"color:#33cc33\">Correct:</span> \n\n\n```python\nreviews_written = reviews.groupby('taster_twitter_handle').size()\n```\nor\n```python\nreviews_written = reviews.groupby('taster_twitter_handle').taster_twitter_handle.count()\n```\n"},"metadata":{}}],"execution_count":2},{"cell_type":"code","source":"#q1.hint()\n#q1.solution()","metadata":{"execution":{"iopub.status.busy":"2025-01-09T22:42:44.060407Z","iopub.execute_input":"2025-01-09T22:42:44.060861Z","iopub.status.idle":"2025-01-09T22:42:44.065207Z","shell.execute_reply.started":"2025-01-09T22:42:44.060825Z","shell.execute_reply":"2025-01-09T22:42:44.063928Z"},"trusted":true},"outputs":[],"execution_count":3},{"cell_type":"markdown","source":"## 2.\nWhat is the best wine I can buy for a given amount of money? Create a `Series` whose index is wine prices and whose values is the maximum number of points a wine costing that much was given in a review. Sort the values by price, ascending (so that `4.0` dollars is at the top and `3300.0` dollars is at the bottom).","metadata":{}},{"cell_type":"code","source":"best_rating_per_price = reviews.groupby('price').points.max()\n\n# Check your answer\nq2.check()","metadata":{"execution":{"iopub.status.busy":"2025-01-09T22:42:46.582717Z","iopub.execute_input":"2025-01-09T22:42:46.583136Z","iopub.status.idle":"2025-01-09T22:42:46.596320Z","shell.execute_reply.started":"2025-01-09T22:42:46.583103Z","shell.execute_reply":"2025-01-09T22:42:46.595210Z"},"trusted":true},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.16666666666666666, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"2_BestRatingPerPrice\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"#q2.hint()\nq2.solution()","metadata":{"execution":{"iopub.status.busy":"2023-07-12T03:35:16.901234Z","iopub.execute_input":"2023-07-12T03:35:16.901635Z","iopub.status.idle":"2023-07-12T03:35:16.911788Z","shell.execute_reply.started":"2023-07-12T03:35:16.901603Z","shell.execute_reply":"2023-07-12T03:35:16.910490Z"},"trusted":true},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"interactionType\": 3, \"questionType\": 1, \"questionId\": \"2_BestRatingPerPrice\", \"learnToolsVersion\": \"0.3.4\", \"valueTowardsCompletion\": 0.0, \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\", \"outcomeType\": 4}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Solution: \n```python\nbest_rating_per_price = reviews.groupby('price')['points'].max().sort_index()\n```","text/markdown":"<span style=\"color:#33cc99\">Solution:</span> \n```python\nbest_rating_per_price = reviews.groupby('price')['points'].max().sort_index()\n```"},"metadata":{}}],"execution_count":3},{"cell_type":"markdown","source":"## 3.\nWhat are the minimum and maximum prices for each `variety` of wine? Create a `DataFrame` whose index is the `variety` category from the dataset and whose values are the `min` and `max` values thereof.","metadata":{}},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"price_extremes = reviews.groupby('variety').price.agg([min, max])\n\n# Check your answer\nq3.check()","metadata":{"execution":{"iopub.status.busy":"2023-07-13T14:18:33.845697Z","iopub.execute_input":"2023-07-13T14:18:33.846125Z","iopub.status.idle":"2023-07-13T14:18:33.888250Z","shell.execute_reply.started":"2023-07-13T14:18:33.846092Z","shell.execute_reply":"2023-07-13T14:18:33.887096Z"},"trusted":true},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.16666666666666666, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"3_PriceExtremes\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"#q3.hint()\n#q3.solution()","metadata":{"execution":{"iopub.status.busy":"2023-07-12T04:04:31.337944Z","iopub.execute_input":"2023-07-12T04:04:31.338464Z","iopub.status.idle":"2023-07-12T04:04:31.343913Z","shell.execute_reply.started":"2023-07-12T04:04:31.338426Z","shell.execute_reply":"2023-07-12T04:04:31.342536Z"},"trusted":true},"outputs":[],"execution_count":7},{"cell_type":"markdown","source":"## 4.\nWhat are the most expensive wine varieties? Create a variable `sorted_varieties` containing a copy of the dataframe from the previous question where varieties are sorted in descending order based on minimum price, then on maximum price (to break ties).","metadata":{}},{"cell_type":"code","source":"sorted_varieties = price_extremes.sort_values(['min', 'max'], ascending = False)\n                                     \nprint(sorted_varieties)\n# Check your answer\nq4.check()","metadata":{"execution":{"iopub.status.busy":"2023-07-13T14:18:37.743583Z","iopub.execute_input":"2023-07-13T14:18:37.743986Z","iopub.status.idle":"2023-07-13T14:18:37.761489Z","shell.execute_reply.started":"2023-07-13T14:18:37.743955Z","shell.execute_reply":"2023-07-13T14:18:37.760388Z"},"trusted":true},"outputs":[{"name":"stdout","text":"           min    max\nvariety              \nRamisco  495.0  495.0\n...        ...    ...\nZelen      NaN    NaN\n\n[707 rows x 2 columns]\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.16666666666666666, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"4_SortedVarieties\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}],"execution_count":7},{"cell_type":"code","source":"#q4.hint()\n#q4.solution()","metadata":{"execution":{"iopub.status.busy":"2023-07-13T14:18:11.412431Z","iopub.execute_input":"2023-07-13T14:18:11.412875Z","iopub.status.idle":"2023-07-13T14:18:11.417208Z","shell.execute_reply.started":"2023-07-13T14:18:11.412843Z","shell.execute_reply":"2023-07-13T14:18:11.416378Z"},"trusted":true},"outputs":[],"execution_count":2},{"cell_type":"markdown","source":"## 5.\nCreate a `Series` whose index is reviewers and whose values is the average review score given out by that reviewer. Hint: you will need the `taster_name` and `points` columns.","metadata":{}},{"cell_type":"code","source":"reviewer_mean_ratings = reviews.groupby(['taster_name'])['points'].mean()\n\n# Check your answer\nq5.check()","metadata":{"execution":{"iopub.status.busy":"2023-07-13T14:26:31.555044Z","iopub.execute_input":"2023-07-13T14:26:31.555544Z","iopub.status.idle":"2023-07-13T14:26:31.596187Z","shell.execute_reply.started":"2023-07-13T14:26:31.555499Z","shell.execute_reply":"2023-07-13T14:26:31.595057Z"},"trusted":true},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.16666666666666666, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"5_ReviewerMeanRatings\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}],"execution_count":13},{"cell_type":"code","source":"#q5.hint()\n#q5.solution()","metadata":{"execution":{"iopub.status.busy":"2023-07-13T14:27:35.351949Z","iopub.execute_input":"2023-07-13T14:27:35.352388Z","iopub.status.idle":"2023-07-13T14:27:35.356896Z","shell.execute_reply.started":"2023-07-13T14:27:35.352351Z","shell.execute_reply":"2023-07-13T14:27:35.355708Z"},"trusted":true},"outputs":[],"execution_count":15},{"cell_type":"markdown","source":"Are there significant differences in the average scores assigned by the various reviewers? Run the cell below to use the `describe()` method to see a summary of the range of values.","metadata":{}},{"cell_type":"code","source":"reviewer_mean_ratings.describe()","metadata":{"execution":{"iopub.status.busy":"2023-07-13T14:27:51.133212Z","iopub.execute_input":"2023-07-13T14:27:51.133968Z","iopub.status.idle":"2023-07-13T14:27:51.159437Z","shell.execute_reply.started":"2023-07-13T14:27:51.133916Z","shell.execute_reply":"2023-07-13T14:27:51.158068Z"},"trusted":true},"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"count    19.000000\n           ...    \nmax      90.562551\nName: points, Length: 8, dtype: float64"},"metadata":{}}],"execution_count":16},{"cell_type":"markdown","source":"country## 6.\nWhat combination of countries and varieties are most common? Create a `Series` whose index is a `MultiIndex`of `{country, variety}` pairs. For example, a pinot noir produced in the US should map to `{\"US\", \"Pinot Noir\"}`. Sort the values in the `Series` in descending order based on wine count.","metadata":{}},{"cell_type":"code","source":"country_variety_counts = reviews.groupby(['country','variety']).variety.count().sort_values(ascending=False)\n\n# Check your answer\nq6.check()","metadata":{"execution":{"iopub.status.busy":"2023-07-13T15:48:05.963695Z","iopub.execute_input":"2023-07-13T15:48:05.964112Z","iopub.status.idle":"2023-07-13T15:48:06.049660Z","shell.execute_reply.started":"2023-07-13T15:48:05.964080Z","shell.execute_reply":"2023-07-13T15:48:06.048558Z"},"trusted":true},"outputs":[{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.Javascript object>","application/javascript":"parent.postMessage({\"jupyterEvent\": \"custom.exercise_interaction\", \"data\": {\"outcomeType\": 1, \"valueTowardsCompletion\": 0.16666666666666666, \"interactionType\": 1, \"questionType\": 1, \"questionId\": \"6_GroupbyCountryVariety\", \"learnToolsVersion\": \"0.3.4\", \"failureMessage\": \"\", \"exceptionClass\": \"\", \"trace\": \"\"}}, \"*\")"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"Correct","text/markdown":"<span style=\"color:#33cc33\">Correct</span>"},"metadata":{}}],"execution_count":5},{"cell_type":"code","source":"#q6.hint()\n#q6.solution()","metadata":{"execution":{"iopub.status.busy":"2023-07-13T15:49:06.816107Z","iopub.execute_input":"2023-07-13T15:49:06.816612Z","iopub.status.idle":"2023-07-13T15:49:06.822584Z","shell.execute_reply.started":"2023-07-13T15:49:06.816577Z","shell.execute_reply":"2023-07-13T15:49:06.821175Z"},"trusted":true},"outputs":[],"execution_count":7},{"cell_type":"markdown","source":"# Keep going\n\nMove on to the [**data types and missing data**](https://www.kaggle.com/residentmario/data-types-and-missing-values).","metadata":{}},{"cell_type":"markdown","source":"---\n\n\n\n\n*Have questions or comments? Visit the [course discussion forum](https://www.kaggle.com/learn/pandas/discussion) to chat with other learners.*","metadata":{}}]}